USE prj4;
-- MEMBER 테이블
CREATE TABLE MEMBER
(
    MEMBER_ID     INT PRIMARY KEY AUTO_INCREMENT,
    EMAIL         VARCHAR(50)  NOT NULL UNIQUE,
    PASSWORD      VARCHAR(100) NOT NULL,
    NICKNAME      VARCHAR(50)  NOT NULL,
    MOBILE        VARCHAR(20),
    PROFILE_IMAGE VARCHAR(100),
    AUTH          VARCHAR(20),
    PROVIDER      VARCHAR(20),
    PROVIDER_ID   VARCHAR(50),
    INPUT_DT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_DT     TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
-- HOST 테이블
CREATE TABLE HOST
(
    HOST_ID        INT PRIMARY KEY AUTO_INCREMENT,
    MEMBER_ID      INT NOT NULL,
    ACCOUNT_NUMBER VARCHAR(50),
    INPUT_DT       TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_DT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID)
);

-- AUTH 테이블
CREATE TABLE AUTH
(
    AUTH_ID   INT PRIMARY KEY AUTO_INCREMENT,
    MEMBER_ID INT NOT NULL,
    AUTH_NAME VARCHAR(50),
    INPUT_DT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID)
);

-- SPACE 테이블
CREATE TABLE SPACE
(
    SPACE_ID       INT PRIMARY KEY AUTO_INCREMENT,
    HOST_ID        INT NOT NULL,
    TITLE          VARCHAR(100),
    SUB_TITLE      VARCHAR(200),
    TYPE           VARCHAR(20),
    LOCATION       VARCHAR(100),
    INTRO          TEXT,
    FACILITY_INFO  TEXT,
    PRICE          DECIMAL(10, 2),
    CAPACITY       INT,
    FLOOR          INT,
    PARKING_SPACES INT,
    INPUT_DT       TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_DT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (HOST_ID) REFERENCES HOST (HOST_ID)
);

-- TYPE_LIST 테이블
CREATE TABLE TYPE_LIST
(
    TYPE_LIST_ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME         VARCHAR(255),
    IS_ACTIVE    BOOLEAN DEFAULT TRUE
);

-- OPTION_LIST 테이블
CREATE TABLE OPTION_LIST
(
    OPTION_LIST_ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME           VARCHAR(255),
    IS_ACTIVE      BOOLEAN DEFAULT TRUE
);

-- SPACE_OPTION 테이블
CREATE TABLE SPACE_CONFIGURATION
(
    SPACE_OPTION_ID INT AUTO_INCREMENT PRIMARY KEY,
    SPACE_ID        INT NOT NULL,
    OPTION_ID       INT NOT NULL,
    TYPE_ID         INT NOT NULL,
    FOREIGN KEY (SPACE_ID) REFERENCES SPACE (SPACE_ID),
    FOREIGN KEY (TYPE_ID) REFERENCES TYPE_LIST (TYPE_LIST_ID),
    FOREIGN KEY (OPTION_ID) REFERENCES OPTION_LIST (OPTION_LIST_ID)
);

-- PAID 테이블
CREATE TABLE PAID
(
    PAID_ID     INT PRIMARY KEY AUTO_INCREMENT,
    SPACE_ID    INT NOT NULL,
    MEMBER_ID   INT NOT NULL,
    TOTAL_PRICE DECIMAL(10, 2),
    START_DT    TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    END_DT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INPUT_DT    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_DT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (SPACE_ID) REFERENCES SPACE (SPACE_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID)
);

-- RESERVATION 테이블
CREATE TABLE RESERVATION
(
    RESERVATION_ID INT PRIMARY KEY AUTO_INCREMENT,
    SPACE_ID       INT NOT NULL,
    MEMBER_ID      INT NOT NULL,
    DATE           DATE,
    START_TIME     TIME,
    END_TIME       TIME,
    STATUS         VARCHAR(20),
    INPUT_DT       TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_DT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (SPACE_ID) REFERENCES SPACE (SPACE_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID)
);

-- COMMENT 테이블
CREATE TABLE COMMENT
(
    COMMENT_ID INT PRIMARY KEY AUTO_INCREMENT,
    MEMBER_ID  INT                     NOT NULL,
    PARENT_ID  INT,
    DIVISION   ENUM ('BOARD', 'SPACE') NOT NULL,
    CONTENT    TEXT,
    INPUT_DT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_DT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID)
);

-- COMMENT_RE 테이블
CREATE TABLE COMMENT_RE
(
    COMMENT_RE_ID INT PRIMARY KEY AUTO_INCREMENT,
    MEMBER_ID     INT NOT NULL,
    COMMENT_ID    INT NOT NULL,
    CONTENT       TEXT,
    INPUT_DT      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_DT     TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID),
    FOREIGN KEY (COMMENT_ID) REFERENCES COMMENT (COMMENT_ID)
);

-- BOARD 테이블
CREATE TABLE BOARD
(
    BOARD_ID  INT PRIMARY KEY AUTO_INCREMENT,
    MEMBER_ID INT NOT NULL,
    TITLE     VARCHAR(100),
    CONTENT   TEXT,
    INPUT_DT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    VIEWS     INT,
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID)
);

-- CATEGORY 테이블
CREATE TABLE CATEGORY
(
    CATEGORY_ID INT PRIMARY KEY AUTO_INCREMENT,
    BOARD_ID    INT NOT NULL,
    NAME        VARCHAR(50),
    DESCRIPTION TEXT,
    INPUT_DT    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_DT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (BOARD_ID) REFERENCES BOARD (BOARD_ID)
);

-- LIKE 테이블
CREATE TABLE LIKES
(
    LIKES_ID  INT PRIMARY KEY AUTO_INCREMENT,
    BOARD_ID  INT NOT NULL,
    MEMBER_ID INT NOT NULL,
    INPUT_DT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (BOARD_ID) REFERENCES BOARD (BOARD_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID)
);

-- FILE 테이블
CREATE TABLE FILE_LIST
(
    FILE_LIST_ID INT PRIMARY KEY AUTO_INCREMENT,
    PARENT_ID    INT NOT NULL,
    DIVISION     INT NOT NULL,
    FILE_NAME    VARCHAR(100),
    INPUT_DT     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_DT    TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (PARENT_ID) REFERENCES BOARD (BOARD_ID),
    FOREIGN KEY (PARENT_ID) REFERENCES COMMENT (COMMENT_ID)
);